# This workflow builds and pushes the gateway and ui docker images to Docker Hub
# when we tag a release.
name: Publish docker images

on:
  push:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    name: Build and push Docker image to Docker Hub
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-24.04
            target: linux/amd64
          - runner: ubuntu-24.04-arm
            target: linux/arm64
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Prepare
        run: |
          platform=${{ matrix.platform.target }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      # - name: Login to DockerHub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ttl.sh/tensorzero

      - name: Build and push ui Docker image
        id: push-ui
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform.target }}
          context: ./ui
          file: ./ui/Dockerfile
          push: true
          provenance: mode=max
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
          tags: ttl.sh/tensorzero-ui
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push gateway Docker image
        id: push-gateway
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform.target }}
          context: .
          file: ./gateway/Dockerfile
          push: true
          provenance: mode=max
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
          tags: ttl.sh/tensorzero-gateway
          labels: ${{ steps.meta.outputs.labels }}

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          gateway_digest="${{ steps.push-gateway.outputs.digest }}"
          ui_digest="${{ steps.push-ui.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${gateway_digest#sha256:}"
          touch "${{ runner.temp }}/digests/${ui_digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ vars.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ttl.sh/tensorzero-ui
            ttl.sh/tensorzero-gateway
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ttl.sh/tensorzero-ui@sha256:%s ' *)

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ttl.sh/tensorzero-gateway@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ttl.sh/tensorzero-ui:${{ steps.meta.outputs.version }}
          docker buildx imagetools inspect ttl.sh/tensorzero-gateway:${{ steps.meta.outputs.version }}